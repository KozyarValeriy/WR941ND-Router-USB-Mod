--- a/arch/mips/ath79/Kconfig
+++ b/arch/mips/ath79/Kconfig
@@ -857,6 +857,7 @@ config ATH79_MACH_TL_WR941ND
 	select ATH79_DEV_GPIO_BUTTONS
 	select ATH79_DEV_LEDS_GPIO
 	select ATH79_DEV_M25P80
+        select ATH79_DEV_USB
 	select ATH79_DEV_WMAC
 
 config ATH79_MACH_TL_WR1041N_V2
--- a/arch/mips/ath79/mach-tl-wr941nd.c
+++ b/arch/mips/ath79/mach-tl-wr941nd.c
@@ -9,6 +9,7 @@
  */
 
 #include <linux/platform_device.h>
+#include <linux/gpio.h>
 
 #include <asm/mach-ath79/ath79.h>
 
@@ -19,6 +20,7 @@
 #include "dev-m25p80.h"
 #include "dev-wmac.h"
 #include "machtypes.h"
+#include "dev-usb.h"
 
 #define TL_WR941ND_GPIO_LED_SYSTEM	2
 #define TL_WR941ND_GPIO_LED_QSS_RED	4
@@ -27,6 +29,7 @@
 
 #define TL_WR941ND_GPIO_BTN_RESET	3
 #define TL_WR941ND_GPIO_BTN_QSS		7
+#define TL_WR941ND_GPIO_USB_POWER       6
 
 #define TL_WR941ND_KEYS_POLL_INTERVAL	20	/* msecs */
 #define TL_WR941ND_KEYS_DEBOUNCE_INTERVAL (3 * TL_WR941ND_KEYS_POLL_INTERVAL)
@@ -90,11 +93,21 @@ static struct dsa_platform_data tl_wr941
 	.chip		= &tl_wr941nd_dsa_chip,
 };
 
+static void __init tl_wr941nd_usb_setup(void)
+{
+	/* enable power for the USB port */
+	gpio_request(TL_WR941ND_GPIO_USB_POWER, "USB power");
+	gpio_direction_output(TL_WR941ND_GPIO_USB_POWER, 1);
+
+	ath79_register_usb();
+}
+
 static void __init tl_wr941nd_setup(void)
 {
 	u8 *mac = (u8 *) KSEG1ADDR(0x1f01fc00);
 	u8 *eeprom = (u8 *) KSEG1ADDR(0x1fff1000);
 
+        tl_wr941nd_usb_setup();
 	ath79_register_mdio(0, 0x0);
 
 	ath79_init_mac(ath79_eth0_data.mac_addr, mac, 0);
--- a/arch/mips/ath79/setup.c
+++ b/arch/mips/ath79/setup.c
@@ -206,6 +206,7 @@ void __init plat_mem_setup(void)
 					 AR71XX_DDR_CTRL_SIZE);
 
 	ath79_detect_sys_type();
+        ath79_pll_wr(0x08, 0x00001030);
 	detect_memory_region(0, ATH79_MEM_SIZE_MIN, ATH79_MEM_SIZE_MAX);
 	ath79_clocks_init();
 
